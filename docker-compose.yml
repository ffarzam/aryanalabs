services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    networks:
      - main
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq
    restart: always

  postgres:
    container_name: postgres
    image: postgres:14.0
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${NAME}
    networks:
      - main
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  aryanaapp:
    build: .
    container_name: aryanaapp
    volumes:
      - .:/code/
    networks:
      - default
      - main
    depends_on:
      - postgres
      - redis
    ports:
      - 8000:8000
    restart: always


  redis:
    container_name: redis
    image: redis:7.2
    networks:
      - main
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis_data:/data


  celery:
    container_name: celery
    build: .
    command: celery -A imdb worker -l INFO
    depends_on:
      - rabbitmq
      - redis
      - aryanaapp
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main
    restart: always
    volumes:
      - .:/code/

  esearch:
    mem_limit: 512m
    image: elasticsearch:7.14.2
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - main
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'false'
      ELASTIC_PASSWORD: 'elastic'
      network.bind_host: 0.0.0.0
      network.host: 0.0.0.0
    volumes:
      - elastic_data:/usr/share/elasticsearch/data


  kibana:
    mem_limit: 512m
    image: kibana:7.14.2
    ports:
      - 5601:5601
    networks:
      - main
    volumes:
      - kibana_data:/usr/share/kibana/config
    environment:
      ELASTICSEARCH_HOSTS: "http://esearch:9200"

  flower:
    container_name: flower
    build: .
    command: celery -A imdb flower
    networks:
      - main
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq
      - celery

    volumes:
      - flower_data:/flower_data
    restart: always



networks:
  main:

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  rabbitmq_log:
  elastic_data:
  kibana_data:



